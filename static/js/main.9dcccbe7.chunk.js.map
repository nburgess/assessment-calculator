{"version":3,"sources":["astro.svg","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","val1","operation","val2","solution","handleChange","bind","handleSubmit","event","target","value","type","checked","name","this","setState","preventDefault","className","src","astro","alt","onSubmit","onChange","defaultValue","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAAe,GCAA,IDAA,IAA0B,mCE4H1BA,G,wDAtHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,IACNC,UAAW,IACXC,KAAM,IACNC,SAAU,IAGZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVH,E,yDAaNE,GACX,IAAMC,EAASD,EAAMC,OACfC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC7DG,EAAOJ,EAAOI,KAEpBC,KAAKC,SAAL,eACGF,EAAOH,M,mCAICF,GACX,IAAIJ,EAAW,EACf,GAA4B,MAAzBU,KAAKd,MAAME,WAA0C,KAApBY,KAAKd,MAAMG,KAC7CC,EAAW,0BAEX,OAAOU,KAAKd,MAAME,WAChB,IAAK,IACHE,GAAYU,KAAKd,MAAMC,OAAQa,KAAKd,MAAMG,KAC1C,MACF,IAAK,IACHC,GAAYU,KAAKd,MAAMC,MAAQa,KAAKd,MAAMG,KAC1C,MACF,IAAK,IACHC,GAAYU,KAAKd,MAAMC,MAAQa,KAAKd,MAAMG,KAC1C,MACF,IAAK,IACHC,GAAYU,KAAKd,MAAMC,MAAQa,KAAKd,MAAMG,KAMhDW,KAAKC,SAAS,CACZX,SAAUA,IAGZI,EAAMQ,mB,+BAIN,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAOF,UAAU,WAAWG,IAAI,UAC1C,sEACA,uBAAMC,SAAUP,KAAKP,aAArB,UACE,gCACE,uBAAOe,SAAUR,KAAKT,aAAcK,MAAOI,KAAKd,MAAMC,KAAMU,KAAK,SAASE,KAAK,WAEjF,gCACE,yBAAQS,SAAUR,KAAKT,aAAcK,MAAOI,KAAKd,MAAME,UAAWW,KAAK,YAAvE,UACE,wBAAQU,cAAY,EAACb,MAAM,IAA3B,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,oBAGJ,gCACE,uBAAOY,SAAUR,KAAKT,aAAcK,MAAOI,KAAKd,MAAMG,KAAMQ,KAAK,SAASE,KAAK,WAEjF,gCACE,uBAAOI,UAAU,SAASN,KAAK,SAASD,MAAM,eAIlD,oBAAGO,UAAU,WAAb,uBAAkC,4BAAIH,KAAKd,MAAMI,uB,GA/EzCoB,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9dcccbe7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/astro.bc754a5b.svg\";","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport astro from './astro.svg';\nimport './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      val1: '1',\n      operation: '+',\n      val2: '1',\n      solution: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    var solution = 0;\n    if(this.state.operation === '/' && +this.state.val2 === 0) {\n      solution = 'Cannot divide by 0';\n    } else {\n      switch(this.state.operation) {\n        case '+':\n          solution = +this.state.val1 + +this.state.val2;\n          break;\n        case '-':\n          solution = +this.state.val1 - +this.state.val2;\n          break;\n        case '*':\n          solution = +this.state.val1 * +this.state.val2;\n          break;\n        case '/':\n          solution = +this.state.val1 / +this.state.val2;\n          break;\n        default:\n          // code block\n      }\n  }\n    this.setState({\n      solution: solution\n    });\n    // alert('A name was submitted: ' + this.state.solution);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={astro} className=\"App-logo\" alt=\"astro\"/>\n          <p>Press \"Solve\" to generate a solution!</p>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              <input onChange={this.handleChange} value={this.state.val1} type=\"number\" name=\"val1\" />\n            </label>\n            <label>\n              <select onChange={this.handleChange} value={this.state.operation} name=\"operation\">\n                <option defaultValue value=\"+\">+</option>\n                <option value=\"-\">-</option>\n                <option value=\"*\">*</option>\n                <option value=\"/\">/</option>\n              </select>\n            </label>\n            <label>\n              <input onChange={this.handleChange} value={this.state.val2} type=\"number\" name=\"val2\" />\n            </label>\n            <label>\n              <input className=\"submit\" type=\"submit\" value=\"Solve\" />\n            </label>\n          </form>\n\n          <p className=\"solution\">Solution: <b>{this.state.solution}</b></p>\n        </header>\n      </div>\n    );\n  }\n}\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <form>\n//           <label>\n//             <input type=\"number\" name=\"name\" />\n//             <select>\n//               <option selected value=\"+\">+</option>\n//               <option value=\"-\">-</option>\n//               <option value=\"*\">*</option>\n//               <option value=\"/\">/</option>\n//             </select>\n//             <input type=\"number\" name=\"name\" />\n//           </label>\n//           <input type=\"submit\" value=\"Solve\" />\n//         </form>\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}